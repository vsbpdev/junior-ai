[pytest]
# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution settings
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Coverage settings
addopts = 
    --cov=.
    --cov-config=.coveragerc
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=0.5
    -v
    --tb=short
    --strict-markers
    --maxfail=5

# Markers for test categorization
markers =
    unit: Unit tests that test individual components
    integration: Integration tests that test component interactions
    performance: Performance benchmarks and load tests
    security: Security vulnerability tests
    slow: Tests that take more than 5 seconds
    ai_required: Tests that require AI API keys to be configured
    mcp: Tests for MCP protocol functionality

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout settings
timeout = 300
timeout_method = thread

# Output settings
console_output_style = progress